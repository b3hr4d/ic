{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cketh_minter_main_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "erc20_contract_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "principal",
          "type": "bytes32"
        }
      ],
      "name": "ReceivedErc20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "principal",
          "type": "bytes32"
        }
      ],
      "name": "ReceivedEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft_contract_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "principal",
          "type": "bytes32"
        }
      ],
      "name": "ReceivedNft",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "principal",
          "type": "bytes32"
        }
      ],
      "name": "depositErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_principal",
          "type": "bytes32"
        }
      ],
      "name": "depositEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "principal",
          "type": "bytes32"
        }
      ],
      "name": "depositNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b506040516107c03803806107c083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161072161009f600039600081816075015281816101330152818161022d015261030301526107216000f3fe60806040526004361061003f5760003560e01c8063732a28341461004457806393e5d42a14610066578063c3965439146100bd578063da63d7b6146100dd575b600080fd5b34801561005057600080fd5b5061006461005f366004610633565b6100f0565b005b34801561007257600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c957600080fd5b506100646100d8366004610633565b61020f565b6100646100eb366004610681565b6102b2565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018490528491908216906323b872dd90606401600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b50505050813373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f7ec9c9ceeb92e53b410dc16fa2db372ccc9b0c61a562dd623287ca3c455836e58660405161020191815260200190565b60405180910390a450505050565b8261025273ffffffffffffffffffffffffffffffffffffffff8216337f00000000000000000000000000000000000000000000000000000000000000008661034f565b813373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f4d69d0bd4287b7f66c548f90154dc81bc98f65a1b362775df5ae171a2ccd262b8660405161020191815260200190565b604051348152819033907f257e057bb61920d8d0ed2cb7b720ac7f9c513cd1110bc9fa543079154f45f4359060200160405180910390a360405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016903480156108fc02916000818181858888f1935050505015801561034b573d6000803e3d6000fd5b5050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526103e49085906103ea565b50505050565b600061040c73ffffffffffffffffffffffffffffffffffffffff84168361048a565b9050805160001415801561043157508080602001905181019061042f919061069a565b155b15610485576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b505050565b60606104988383600061049f565b9392505050565b6060814710156104dd576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240161047c565b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161050691906106bc565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b5091509150610558868383610562565b9695505050505050565b60608261057757610572826105f1565b610498565b815115801561059b575073ffffffffffffffffffffffffffffffffffffffff84163b155b156105ea576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161047c565b5080610498565b8051156106015780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060006060848603121561064857600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461066c57600080fd5b95602085013595506040909401359392505050565b60006020828403121561069357600080fd5b5035919050565b6000602082840312156106ac57600080fd5b8151801515811461049857600080fd5b6000825160005b818110156106dd57602081860181015185830152016106c3565b50600092019182525091905056fea26469706673582212204c27effc0087969bb895f2cb8e3bbe297966635468e813d5e9a2966653567b4b64736f6c63430008140033",
    "sourceMap": "469:2152:0:-:0;;;1112:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1170:63:0;;;469:2152;;14:290:7;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;469:2152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061003f5760003560e01c8063732a28341461004457806393e5d42a14610066578063c3965439146100bd578063da63d7b6146100dd575b600080fd5b34801561005057600080fd5b5061006461005f366004610633565b6100f0565b005b34801561007257600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c957600080fd5b506100646100d8366004610633565b61020f565b6100646100eb366004610681565b6102b2565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018490528491908216906323b872dd90606401600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b50505050813373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f7ec9c9ceeb92e53b410dc16fa2db372ccc9b0c61a562dd623287ca3c455836e58660405161020191815260200190565b60405180910390a450505050565b8261025273ffffffffffffffffffffffffffffffffffffffff8216337f00000000000000000000000000000000000000000000000000000000000000008661034f565b813373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f4d69d0bd4287b7f66c548f90154dc81bc98f65a1b362775df5ae171a2ccd262b8660405161020191815260200190565b604051348152819033907f257e057bb61920d8d0ed2cb7b720ac7f9c513cd1110bc9fa543079154f45f4359060200160405180910390a360405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016903480156108fc02916000818181858888f1935050505015801561034b573d6000803e3d6000fd5b5050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526103e49085906103ea565b50505050565b600061040c73ffffffffffffffffffffffffffffffffffffffff84168361048a565b9050805160001415801561043157508080602001905181019061042f919061069a565b155b15610485576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b505050565b60606104988383600061049f565b9392505050565b6060814710156104dd576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240161047c565b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161050691906106bc565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b5091509150610558868383610562565b9695505050505050565b60608261057757610572826105f1565b610498565b815115801561059b575073ffffffffffffffffffffffffffffffffffffffff84163b155b156105ea576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161047c565b5080610498565b8051156106015780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060006060848603121561064857600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461066c57600080fd5b95602085013595506040909401359392505050565b60006020828403121561069357600080fd5b5035919050565b6000602082840312156106ac57600080fd5b8151801515811461049857600080fd5b6000825160005b818110156106dd57602081860181015185830152016106c3565b50600092019182525091905056fea26469706673582212204c27effc0087969bb895f2cb8e3bbe297966635468e813d5e9a2966653567b4b64736f6c63430008140033",
    "sourceMap": "469:2152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:321;;;;;;;;;;-1:-1:-1;2298:321:0;;;;;:::i;:::-;;:::i;:::-;;1361:107;;;;;;;;;;-1:-1:-1;1436:25:0;1361:107;;640:42:7;628:55;;;610:74;;598:2;583:18;1361:107:0;;;;;;;1828:380;;;;;;;;;;-1:-1:-1;1828:380:0;;;;;:::i;:::-;;:::i;1558:178::-;;;;;;:::i;:::-;;:::i;2298:321::-;2471:69;;;;;2493:10;2471:69;;;1151:34:7;2471:21:0;2505:25;1221:15:7;;1201:18;;;1194:43;1253:18;;;1246:34;;;2449:11:0;;2471:21;;;;;;1063:18:7;;2471:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:9;2581:10;2556:56;;2568:11;2556:56;;;2593:7;2556:56;;;;1437:25:7;;1425:2;1410:18;;1291:177;2556:56:0;;;;;;;;2412:207;2298:321;;;:::o;1828:380::-;1982:13;2006:120;:27;;;2047:10;2071:25;2110:6;2006:27;:120::i;:::-;2191:9;2171:10;2142:59;;2156:13;2142:59;;;2183:6;2142:59;;;;1437:25:7;;1425:2;1410:18;;1291:177;1558:178:0;1628:46;;1652:9;1437:25:7;;1663:10:0;;1640;;1628:46;;1425:2:7;1410:18;1628:46:0;;;;;;;1684:45;;:34;:25;:34;;1719:9;1684:45;;;;;;;;;1719:9;1684:34;:45;;;;;;;;;;;;;;;;;;;;;1558:178;:::o;1702:188:3:-;1829:53;;;1844:18;1169:15:7;;;1829:53:3;;;1151:34:7;1221:15;;1201:18;;;1194:43;1253:18;;;;1246:34;;;1829:53:3;;;;;;;;;;1063:18:7;;;;1829:53:3;;;;;;;;;;;;;;1802:81;;1822:5;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;:27;;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;;;;640:42:7;628:55;;4631:40:3;;;610:74:7;583:18;;4631:40:3;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;2705:151;-1:-1:-1;;;2705:151:5:o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;;;;3394:4;3359:41;;;610:74:7;583:18;;3359:41:5;464:226:7;3303:108:5;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:5:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:5;;;;:23;5045:49;5041:119;;;5121:24;;;;;640:42:7;628:55;;5121:24:5;;;610:74:7;583:18;;5121:24:5;464:226:7;5041:119:5;-1:-1:-1;5180:10:5;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:445:7;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;215:9;202:23;265:42;258:5;254:54;247:5;244:65;234:93;;323:1;320;313:12;234:93;346:5;398:2;383:18;;370:32;;-1:-1:-1;449:2:7;434:18;;;421:32;;14:445;-1:-1:-1;;;14:445:7:o;695:180::-;754:6;807:2;795:9;786:7;782:23;778:32;775:52;;;823:1;820;813:12;775:52;-1:-1:-1;846:23:7;;695:180;-1:-1:-1;695:180:7:o;1876:277::-;1943:6;1996:2;1984:9;1975:7;1971:23;1967:32;1964:52;;;2012:1;2009;2002:12;1964:52;2044:9;2038:16;2097:5;2090:13;2083:21;2076:5;2073:32;2063:60;;2119:1;2116;2109:12;2158:412;2287:3;2325:6;2319:13;2350:1;2360:129;2374:6;2371:1;2368:13;2360:129;;;2472:4;2456:14;;;2452:25;;2446:32;2433:11;;;2426:53;2389:12;2360:129;;;-1:-1:-1;2544:1:7;2508:16;;2533:13;;;-1:-1:-1;2508:16:7;2158:412;-1:-1:-1;2158:412:7:o",
    "linkReferences": {},
    "immutableReferences": {
      "11": [
        {
          "start": 117,
          "length": 32
        },
        {
          "start": 307,
          "length": 32
        },
        {
          "start": 557,
          "length": 32
        },
        {
          "start": 771,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "depositErc20(address,uint256,bytes32)": "c3965439",
    "depositEth(bytes32)": "da63d7b6",
    "depositNft(address,uint256,bytes32)": "732a2834",
    "getMinterAddress()": "93e5d42a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cketh_minter_main_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20_contract_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"principal\",\"type\":\"bytes32\"}],\"name\":\"ReceivedErc20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"principal\",\"type\":\"bytes32\"}],\"name\":\"ReceivedEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft_contract_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"principal\",\"type\":\"bytes32\"}],\"name\":\"ReceivedNft\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"principal\",\"type\":\"bytes32\"}],\"name\":\"depositErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_principal\",\"type\":\"bytes32\"}],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"principal\",\"type\":\"bytes32\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Set cketh_minter_main_address.\"},\"depositErc20(address,uint256,bytes32)\":{\"details\":\"Emits the `ReceivedErc20` event if the transfer succeeds.\"},\"depositEth(bytes32)\":{\"details\":\"Emits the `ReceivedEth` event if the transfer succeeds.\"},\"depositNft(address,uint256,bytes32)\":{\"details\":\"Emits the `ReceivedNft` event if the transfer succeeds.\"},\"getMinterAddress()\":{\"details\":\"Return ckETH minter main address.\",\"returns\":{\"_0\":\"address of ckETH minter main address.\"}}},\"title\":\"A helper smart contract for ETH/ERC20/NFT <-> ckETH/ckERC20/ckNFT conversion.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This smart contract deposits incoming ETH/ERC20/NFT to the ckETH minter account and emits deposit events.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CkTokenDeposit.sol\":\"CkTokenDeposit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"contracts/CkTokenDeposit.sol\":{\"keccak256\":\"0x061c7fbb209bce1a40d81faac9b3fb3656feedbe420cb86ad899473083558583\",\"license\":\"Apache-2.0 AND MIT\",\"urls\":[\"bzz-raw://9c499717a89f57020cbd1b0b8a8efbfb2961370a8791b1b3c9e24f2efacd830d\",\"dweb:/ipfs/QmUv5mRgfnepkLyMXzphWMLGs7fCnEQrgwPE5ARFv1BQ8p\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_cketh_minter_main_address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "erc20_contract_address",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "principal",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ReceivedErc20",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "principal",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ReceivedEth",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nft_contract_address",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "principal",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ReceivedNft",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "erc20_address",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "principal",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositErc20"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_principal",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositEth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nft_address",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "principal",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinterAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Set cketh_minter_main_address."
          },
          "depositErc20(address,uint256,bytes32)": {
            "details": "Emits the `ReceivedErc20` event if the transfer succeeds."
          },
          "depositEth(bytes32)": {
            "details": "Emits the `ReceivedEth` event if the transfer succeeds."
          },
          "depositNft(address,uint256,bytes32)": {
            "details": "Emits the `ReceivedNft` event if the transfer succeeds."
          },
          "getMinterAddress()": {
            "details": "Return ckETH minter main address.",
            "returns": {
              "_0": "address of ckETH minter main address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/CkTokenDeposit.sol": "CkTokenDeposit"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CkTokenDeposit.sol": {
        "keccak256": "0x061c7fbb209bce1a40d81faac9b3fb3656feedbe420cb86ad899473083558583",
        "urls": [
          "bzz-raw://9c499717a89f57020cbd1b0b8a8efbfb2961370a8791b1b3c9e24f2efacd830d",
          "dweb:/ipfs/QmUv5mRgfnepkLyMXzphWMLGs7fCnEQrgwPE5ARFv1BQ8p"
        ],
        "license": "Apache-2.0 AND MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CkTokenDeposit.sol",
    "id": 156,
    "exportedSymbols": {
      "Address": [
        929
      ],
      "CkTokenDeposit": [
        155
      ],
      "IERC165": [
        941
      ],
      "IERC20": [
        233
      ],
      "IERC20Permit": [
        269
      ],
      "IERC721": [
        676
      ],
      "SafeERC20": [
        559
      ]
    },
    "nodeType": "SourceUnit",
    "src": "48:2574:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "48:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "73:56:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 156,
        "sourceUnit": 234,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "130:65:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 156,
        "sourceUnit": 560,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "196:58:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 156,
        "sourceUnit": 677,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155,
        "nodeType": "ContractDefinition",
        "src": "469:2152:0",
        "nodes": [
          {
            "id": 9,
            "nodeType": "UsingForDirective",
            "src": "499:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 6,
              "name": "SafeERC20",
              "nameLocations": [
                "505:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 559,
              "src": "505:9:0"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nameLocations": [
                  "519:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 233,
                "src": "519:6:0"
              },
              "referencedDeclaration": 233,
              "src": "519:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$233",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 11,
            "nodeType": "VariableDeclaration",
            "src": "532:59:0",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "cketh_minter_main_address",
            "nameLocation": "566:25:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "532:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "id": 19,
            "nodeType": "EventDefinition",
            "src": "598:112:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "257e057bb61920d8d0ed2cb7b720ac7f9c513cd1110bc9fa543079154f45f435",
            "name": "ReceivedEth",
            "nameLocation": "604:11:0",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "641:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "625:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "663:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "655:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "694:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "678:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:94:0"
            }
          },
          {
            "id": 29,
            "nodeType": "EventDefinition",
            "src": "716:164:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4d69d0bd4287b7f66c548f90154dc81bc98f65a1b362775df5ae171a2ccd262b",
            "name": "ReceivedErc20",
            "nameLocation": "722:13:0",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "erc20_contract_address",
                  "nameLocation": "761:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "745:38:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "809:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "793:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "832:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "824:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "864:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "848:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:144:0"
            }
          },
          {
            "id": 39,
            "nodeType": "EventDefinition",
            "src": "886:161:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7ec9c9ceeb92e53b410dc16fa2db372ccc9b0c61a562dd623287ca3c455836e5",
            "name": "ReceivedNft",
            "nameLocation": "892:11:0",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft_contract_address",
                  "nameLocation": "929:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "913:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "975:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "959:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "998:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "990:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "1031:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1015:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:143:0"
            }
          },
          {
            "id": 53,
            "nodeType": "FunctionDefinition",
            "src": "1112:128:0",
            "nodes": [],
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "1160:80:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "cketh_minter_main_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1170:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48,
                          "name": "_cketh_minter_main_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1206:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1198:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1198:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1170:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:63:0"
                }
              ]
            },
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "1053:54:0",
              "text": " @dev Set cketh_minter_main_address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_cketh_minter_main_address",
                  "nameLocation": "1132:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1124:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:36:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1160:0:0"
            },
            "scope": 155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62,
            "nodeType": "FunctionDefinition",
            "src": "1361:107:0",
            "nodes": [],
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1419:49:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "name": "cketh_minter_main_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1436:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "1429:32:0"
                }
              ]
            },
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "1246:110:0",
              "text": " @dev Return ckETH minter main address.\n @return address of ckETH minter main address."
            },
            "functionSelector": "93e5d42a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinterAddress",
            "nameLocation": "1370:16:0",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1410:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1409:9:0"
            },
            "scope": 155,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 84,
            "nodeType": "FunctionDefinition",
            "src": "1558:178:0",
            "nodes": [],
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1613:123:0",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1640:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1644:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1640:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1652:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1656:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1652:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73,
                        "name": "_principal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1663:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68,
                      "name": "ReceivedEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1628:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "EmitStatement",
                  "src": "1623:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1719:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1723:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1719:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76,
                        "name": "cketh_minter_main_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1684:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1684:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:45:0"
                }
              ]
            },
            "documentation": {
              "id": 63,
              "nodeType": "StructuredDocumentation",
              "src": "1474:79:0",
              "text": " @dev Emits the `ReceivedEth` event if the transfer succeeds."
            },
            "functionSelector": "da63d7b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEth",
            "nameLocation": "1567:10:0",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_principal",
                  "nameLocation": "1586:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1578:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:20:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:0"
            },
            "scope": 155,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 119,
            "nodeType": "FunctionDefinition",
            "src": "1828:380:0",
            "nodes": [],
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1945:263:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    96
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "erc20Token",
                      "nameLocation": "1962:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1955:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$233",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 95,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 94,
                          "name": "IERC20",
                          "nameLocations": [
                            "1955:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 233,
                          "src": "1955:6:0"
                        },
                        "referencedDeclaration": 233,
                        "src": "1955:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$233",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "erc20_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1982:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1975:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$233_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$233",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1955:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2047:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2051:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2047:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 106,
                        "name": "cketh_minter_main_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2071:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 107,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "2110:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101,
                        "name": "erc20Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2006:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$233",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2017:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 346,
                      "src": "2006:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$233_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$233_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:120:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "erc20_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2156:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2171:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2175:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2171:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 114,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "2183:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 115,
                        "name": "principal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2191:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 110,
                      "name": "ReceivedErc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2142:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes32)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "EmitStatement",
                  "src": "2137:64:0"
                }
              ]
            },
            "documentation": {
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "1742:81:0",
              "text": " @dev Emits the `ReceivedErc20` event if the transfer succeeds."
            },
            "functionSelector": "c3965439",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositErc20",
            "nameLocation": "1837:12:0",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "erc20_address",
                  "nameLocation": "1867:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1859:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1898:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1890:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "1922:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1914:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:88:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1945:0:0"
            },
            "scope": 155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 154,
            "nodeType": "FunctionDefinition",
            "src": "2298:321:0",
            "nodes": [],
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2412:207:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "nftToken",
                      "nameLocation": "2430:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2422:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$676",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 130,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 129,
                          "name": "IERC721",
                          "nameLocations": [
                            "2422:7:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 676,
                          "src": "2422:7:0"
                        },
                        "referencedDeclaration": 676,
                        "src": "2422:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$676",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "nft_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2449:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 132,
                      "name": "IERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "2441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC721_$676_$",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$676",
                      "typeString": "contract IERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2422:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 139,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2493:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2497:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2493:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 141,
                        "name": "cketh_minter_main_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2505:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 142,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "nftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2471:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$676",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2480:12:0",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 641,
                      "src": "2471:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:69:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "nft_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2568:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2581:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2585:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2581:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 149,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2593:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 150,
                        "name": "principal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2602:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 145,
                      "name": "ReceivedNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2556:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes32)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "EmitStatement",
                  "src": "2551:61:0"
                }
              ]
            },
            "documentation": {
              "id": 120,
              "nodeType": "StructuredDocumentation",
              "src": "2214:79:0",
              "text": " @dev Emits the `ReceivedNft` event if the transfer succeeds."
            },
            "functionSelector": "732a2834",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nameLocation": "2307:10:0",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "nft_address",
                  "nameLocation": "2335:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2327:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2364:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2356:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "2389:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2381:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2317:87:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:0"
            },
            "scope": 155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CkTokenDeposit",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "256:212:0",
          "text": " @title A helper smart contract for ETH/ERC20/NFT <-> ckETH/ckERC20/ckNFT conversion.\n @notice This smart contract deposits incoming ETH/ERC20/NFT to the ckETH minter account and emits deposit events."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          155
        ],
        "name": "CkTokenDeposit",
        "nameLocation": "478:14:0",
        "scope": 156,
        "usedErrors": [
          286,
          684,
          689,
          692
        ],
        "usedEvents": [
          19,
          29,
          39
        ]
      }
    ],
    "license": "Apache-2.0 AND MIT"
  },
  "id": 0
}